# Copyright (C) <2020> Intel Corporation
#
# SPDX-License-Identifier: Apache-2.0

import("//chrome/process_version_rc_template.gni")
import("//testing/test.gni")

config("owt_web_transport_config") {
  include_dirs = [
    "sdk",
    "sdk/api",
  ]
  defines = [ "OWT_QUIC_LIBRARY_IMPL" ]
}

source_set("owt_web_transport_impl") {
  public_deps = [
    ":generate_version_info",
    "//base",
    "//net",
    "//net:simple_quic_tools",
    "//net/third_party/quiche:simple_quic_tools_core",
    "//third_party/boringssl",
  ]
  sources = [
    "sdk/api/owt/quic/logging.h",
    "sdk/api/owt/quic/version.h",
    "sdk/api/owt/quic/web_transport_client_interface.h",
    "sdk/api/owt/quic/web_transport_definitions.h",
    "sdk/api/owt/quic/web_transport_factory.h",
    "sdk/api/owt/quic/web_transport_server_interface.h",
    "sdk/impl/http3_server_session.cc",
    "sdk/impl/http3_server_session.h",
    "sdk/impl/http3_server_stream.cc",
    "sdk/impl/http3_server_stream.h",
    "sdk/impl/proof_source_owt.cc",
    "sdk/impl/proof_source_owt.h",
    "sdk/impl/utilities.cc",
    "sdk/impl/utilities.h",
    "sdk/impl/version.cc",
    "sdk/impl/logging.cc",
    "sdk/impl/web_transport_factory_impl.cc",
    "sdk/impl/web_transport_factory_impl.h",
    "sdk/impl/web_transport_http3_client.cc",
    "sdk/impl/web_transport_http3_client.h",
    "sdk/impl/web_transport_owt_client_impl.cc",
    "sdk/impl/web_transport_owt_client_impl.h",
    "sdk/impl/web_transport_owt_server_dispatcher.cc",
    "sdk/impl/web_transport_owt_server_dispatcher.h",
    "sdk/impl/web_transport_owt_server_impl.cc",
    "sdk/impl/web_transport_owt_server_impl.h",
    "sdk/impl/web_transport_server_backend.cc",
    "sdk/impl/web_transport_server_backend.h",
    "sdk/impl/web_transport_server_session.cc",
    "sdk/impl/web_transport_server_session.h",
    "sdk/impl/web_transport_stream_impl.cc",
    "sdk/impl/web_transport_stream_impl.h",
  ]
  configs += [ ":owt_web_transport_config" ]
}

if (is_win) {
  process_version_rc_template("owt_web_transport_dll_version") {
    deps = [ ":update_last_change" ]
    template_file = "sdk/resources/owt_version.rc.version"
    sources = [
      "$target_gen_dir/lastchange",
      "sdk/VER",
    ]
    output = "$target_gen_dir/owt_web_transport_dll_version.rc"
  }
}

action("update_last_change") {
  script = "//build/util/lastchange.py"
  args = [
    "-s",
    rebase_path("//owt"),
    "--filter",
    ".*",
    "-o",
    rebase_path("$target_gen_dir/lastchange"),
  ]
  outputs = [ "$target_gen_dir/lastchange" ]
}

process_version("generate_version_info") {
  deps = [ ":update_last_change" ]
  template_file = "sdk/impl/version_info_values.h.template"
  sources = [
    "$target_gen_dir/lastchange",
    "sdk/VER",
  ]
  output = "$target_gen_dir/version_info_values.h"
}

shared_library("owt_web_transport") {
  deps = [ ":owt_web_transport_impl" ]
  configs += [ ":owt_web_transport_config" ]
  if (is_win) {
    deps += [ ":owt_web_transport_dll_version" ]
    sources = [ "sdk/impl/dllmain.cc" ]
  }
}

test("owt_web_transport_tests") {
  testonly = true
  sources = [
    "sdk/impl/proof_source_owt_unittest.cc",
    "sdk/impl/tests/run_all_unittests.cc",
    "sdk/impl/tests/web_transport_echo_visitors.cc",
    "sdk/impl/tests/web_transport_echo_visitors.h",
    "sdk/impl/tests/web_transport_owt_end_to_end_test.cc",
    "sdk/impl/version_unittest.cc",
    "sdk/impl/web_transport_factory_impl_unittest.cc",
  ]
  configs += [
    "//build/config:precompiled_headers",
    ":owt_web_transport_config",
  ]
  deps = [
    ":owt_web_transport_impl",
    "//net:quic_test_tools",
    "//net:test_support",
    "//testing/gmock",
    "//testing/gtest",
  ]
}

if (is_win) {
  test("owt_web_transport_dll_tests") {
    testonly = true
    sources = [
      "sdk/impl/dllmain_unittest.cc",
      "sdk/impl/tests/run_all_unittests.cc",
    ]
    deps = [
      ":owt_web_transport",
      "//net:quic_test_tools",
      "//net:test_support",
      "//testing/gmock",
      "//testing/gtest",
    ]
    configs += [ ":owt_web_transport_config" ]
  }
}

executable("owt_web_transport_test_server") {
  sources = [
    "sdk/impl/tests/web_transport_echo_visitors.cc",
    "sdk/impl/tests/web_transport_echo_visitors.h",
    "sdk/impl/tests/web_transport_test_server.cc",
  ]
  public_deps = [ ":owt_web_transport_impl" ]
  configs += [ ":owt_web_transport_config" ]
}

executable("owt_web_transport_test_client") {
  sources = [
    "sdk/impl/tests/web_transport_test_client.cc",
  ]
  public_deps = [ ":owt_web_transport_impl" ]
  configs += [ ":owt_web_transport_config" ]
}
